<?php

/**
 * Implementation of hook_install().
 */
function ash_profile_install(&$task, $url) {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);
  
  // Insert default user-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Page'),
      'base' => 'node_content',
      'description' => st("This is for regular content entries, like an <em>About Us</em> page for example. By default, a <em>page</em> entry does not allow visitor comments and is not featured on the site's initial home page."),
      'custom' => TRUE,
      'modified' => TRUE,
      'locked' => FALSE,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Insert default pre-defined RDF mapping into the database.
  $rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
  );
  foreach ($rdf_mappings as $rdf_mapping) {
    rdf_mapping_save($rdf_mapping);
  }

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  
  // Set Page's URL to be the Menu Path
  variable_set('pathauto_node_page_pattern', '[node:menu-link:parent:url:path]/[node:title]');

  //Enable and make default AA Zen starter theme.
  //Also enable Tao and Rubik, make Rubik the admin theme, and have it apply to edit forms.
  db_query("UPDATE {system} SET status=%d WHERE name = '%s'", 1, 'squareone');
  db_query("UPDATE {system} SET status=%d WHERE name = '%s'", 1, 'tao');
  db_query("UPDATE {system} SET status=%d WHERE name = '%s'", 1, 'rubik');
  variable_set('theme_default', 'squareone');
  variable_set('admin_theme', 'rubik');
  variable_set('node_admin_theme', 1);
  
  //Enable TinyMCE for both "Filtered HTML" and "Full HTML" input formats.
  for ($i = 1; $i <=3; $i++) {
    db_query('INSERT INTO {wysiwyg} SET format = %d', $i);
  } 
  db_query("UPDATE {wysiwyg} SET editor = 'tinymce' WHERE format = 1 OR format = 2");
  
	// Setting smtp module backup server to VISI.
	variable_set('smtp_hostbackup', 'smtp.visi.com');

	// Setting some default date formats.
	variable_set('date_format_date_only', 'F j, Y');
	variable_set('date_format_time_only', 'g:i a');
	
	$date = new stdClass();
	$date->type = 'date_only';
	$date->title = 'Date Only';
	$date->locked = 0;
	$time = new stdClass();
	$time->type = 'time_only';
	$time->title = 'Time Only';
	$time->locked = 0;
	drupal_write_record('date_format_types', $date);
	drupal_write_record('date_format_types', $time);
	unset($date); unset($time);
	
	$date = new stdClass();
	$date->format = 'F j, Y';
	$date->type = 'custom';
	$date->locked = 0;
	$time = new stdClass();
	$time->format = 'g:i a';
	$time->type = 'custom';
	$time->locked = 0;
	drupal_write_record('date_formats', $date);
	drupal_write_record('date_formats', $time);

  // Update the menu router information.
  menu_rebuild();

}
